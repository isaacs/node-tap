TAP version 13
    # Subtest: parent
before 1 parent
done
        # Subtest: child
before 1 child
before 2 child
            # Subtest: grandchild
before 1 grandchild
before 2 grandchild
            ok 1 - the only actual assertion
after 2 undefined
            not ok 2 - Error: this is fine
              ---
              {"at":{"column":23,"file":"test/test/before-after-each-promise.js","line":28},"message":"Error: this is fine","source":"return reject(new Error('this is fine'))\n","test":"grandchild"}
              ...
            1..2
            # failed 1 of 2 tests
        not ok 1 - grandchild ___/# time=[0-9.]+(ms)?/~~~
          ---
          {"at":{"column":7,"file":"test/test/before-after-each-promise.js","line":35},"results":{"count":2,"fail":1,"ok":false,"pass":1,"plan":{"end":2,"start":1}},"source":"t.test('grandchild', function (t) {\n"}
          ...

after 2 undefined
after 1 child
        1..1
        # failed 1 of 1 tests
    not ok 1 - child ___/# time=[0-9.]+(ms)?/~~~
      ---
      {"at":{"column":5,"file":"test/test/before-after-each-promise.js","line":34},"results":{"count":1,"fail":1,"ok":false,"pass":0,"plan":{"end":1,"start":1}},"source":"t.test('child', function (t) {\n"}
      ...

after 1 parent
    1..1
    # failed 1 of 1 tests
not ok 1 - parent ___/# time=[0-9.]+(ms)?/~~~
  ---
  {"at":{"column":3,"file":"test/test/before-after-each-promise.js","line":17},"results":{"count":1,"fail":1,"ok":false,"pass":0,"plan":{"end":1,"start":1}},"source":"t.test('parent', function (t) {\n"}
  ...

1..1
# failed 1 of 1 tests
___/# time=[0-9.]+(ms)?/~~~

